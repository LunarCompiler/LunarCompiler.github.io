<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>linux文件编程</title>
    <link href="/2024/11/19/linux%E6%96%87%E4%BB%B6%E7%BC%96%E7%A8%8B/"/>
    <url>/2024/11/19/linux%E6%96%87%E4%BB%B6%E7%BC%96%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h4 id="探索"><a href="#探索" class="headerlink" title="探索"></a>探索</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c">fopen fread fwrite fseek fclose<br><br>fgetc fputc feof<br><br>与 opem...有何区别,具体怎么用百度<br><br>https:<span class="hljs-comment">//www.cnblogs.com/NickyYe/p/5497659.html</span><br></code></pre></td></tr></table></figure><h4 id="open-函数"><a href="#open-函数" class="headerlink" title="open 函数"></a>open 函数</h4><p>函数定义：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">open</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *pathname, <span class="hljs-type">int</span> flags, ...<span class="hljs-comment">/* mode_t mode */</span> )</span>;<br></code></pre></td></tr></table></figure><p>示例代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">int</span> fd = open(<span class="hljs-string">&quot;./file2&quot;</span>, O_RDWR);<br><br>        <span class="hljs-keyword">if</span>(fd == <span class="hljs-number">-1</span>)<br>        &#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;file2 open err fd :%d\n&quot;</span>,fd);<br>                fd = open(<span class="hljs-string">&quot;./file2&quot;</span>,O_RDWR|O_CREAT,<span class="hljs-number">0600</span>);<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;create file2...\n&quot;</span>);<br>        &#125;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;fd: %d\n&quot;</span>,fd);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="write-函数"><a href="#write-函数" class="headerlink" title="write 函数"></a>write 函数</h4><p>函数定义：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><br><span class="hljs-type">ssize_t</span> <span class="hljs-title function_">write</span><span class="hljs-params">(<span class="hljs-type">int</span> fd, <span class="hljs-type">const</span> <span class="hljs-type">void</span> buf[.count], <span class="hljs-type">size_t</span> count)</span>;<br></code></pre></td></tr></table></figure><p>示例:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">int</span> fd = open(<span class="hljs-string">&quot;./file2&quot;</span>, O_RDWR);<br>        <span class="hljs-type">char</span> *buf = <span class="hljs-string">&quot;wangtong shuai!&quot;</span>;<br><br>        <span class="hljs-keyword">if</span>(fd == <span class="hljs-number">-1</span>)<br>        &#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;file2 open err fd :%d\n&quot;</span>,fd);<br>                fd = open(<span class="hljs-string">&quot;./file2&quot;</span>,O_RDWR|O_CREAT,<span class="hljs-number">0600</span>);<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;create file2...\n&quot;</span>);<br>        &#125;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;fd: %d\n&quot;</span>,fd);<br>   <span class="hljs-comment">// ssize_t write(int fd, const void buf[.count], size_t count);</span><br>        <span class="hljs-type">int</span> n_write = write(fd,buf,<span class="hljs-built_in">strlen</span>(buf));<br>        <span class="hljs-keyword">if</span>(n_write != <span class="hljs-number">-1</span>)<br>        &#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;write %d byte to file2\n&quot;</span>,n_write);<br>        &#125;<br><br>        close(fd);<br>        open(<span class="hljs-string">&quot;./file2&quot;</span>, O_RDWR);<br><br>        <span class="hljs-type">char</span> *read_buf;<br>        read_buf =(<span class="hljs-type">char</span> *) <span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(<span class="hljs-type">char</span>)* n_write + <span class="hljs-number">1</span>);<br>        <span class="hljs-type">int</span> n_read = read(fd,read_buf,n_write);<br><br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;read:%d,context:%s\n&quot;</span>,n_read,read_buf);<br><br>        close(fd);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="lseek"><a href="#lseek" class="headerlink" title="lseek"></a>lseek</h4><p>函数定义：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><br><span class="hljs-type">off_t</span> <span class="hljs-title function_">lseek</span><span class="hljs-params">(<span class="hljs-type">int</span> fd, <span class="hljs-type">off_t</span> offset, <span class="hljs-type">int</span> whence)</span>;<br></code></pre></td></tr></table></figure><h6 id="lseek函数的作用"><a href="#lseek函数的作用" class="headerlink" title="lseek函数的作用"></a>lseek函数的作用</h6><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c">lseek函数的作用有以下四点：<br><br><span class="hljs-number">1.</span>移动文件指针到文件头：<br><br>lseek(fd, <span class="hljs-number">0</span>, SEEK_SET);<br><br><span class="hljs-number">2.</span>获取当前文件指针的位置<br><br>lseek(fd, <span class="hljs-number">0</span>, SEEK_CUR);<br><br><span class="hljs-number">3.</span>获取文件长度<br><br>lseek(fd, <span class="hljs-number">0</span>, SEEK_END);<br><br><span class="hljs-number">4.</span>拓展文件的长度，当前文件<span class="hljs-number">10b</span>, <span class="hljs-number">110b</span>, 增加了<span class="hljs-number">100</span>个字节<br><br>lseek(fd, <span class="hljs-number">100</span>, SEEK_END)<br>注意：拓展完需要再写一次数据，否则拓展无效<br></code></pre></td></tr></table></figure><p>示例:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">int</span> fd = open(<span class="hljs-string">&quot;./file2&quot;</span>, O_RDWR);<br>        <span class="hljs-type">char</span> *buf = <span class="hljs-string">&quot;wangtong shuai!&quot;</span>;<br><br>        <span class="hljs-keyword">if</span>(fd == <span class="hljs-number">-1</span>)<br>        &#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;file2 open err fd :%d\n&quot;</span>,fd);<br>                fd = open(<span class="hljs-string">&quot;./file2&quot;</span>,O_RDWR|O_CREAT,<span class="hljs-number">0600</span>);<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;create file2...\n&quot;</span>);<br>        &#125;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;fd: %d\n&quot;</span>,fd);<br>   <span class="hljs-comment">// ssize_t write(int fd, const void buf[.count], size_t count);</span><br>        <span class="hljs-type">int</span> n_write = write(fd,buf,<span class="hljs-built_in">strlen</span>(buf));<br>        <span class="hljs-keyword">if</span>(n_write != <span class="hljs-number">-1</span>)<br>        &#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;write %d byte to file2\n&quot;</span>,n_write);<br>        &#125;<br><br>        <span class="hljs-comment">//close(fd);</span><br>        <span class="hljs-comment">//open(&quot;./file2&quot;, O_RDWR);</span><br><br>        <span class="hljs-comment">//off_t lseek(int fd, off_t offset, int whence);</span><br><br>        lseek(fd,<span class="hljs-number">0</span>,SEEK_SET);<br><br>        <span class="hljs-type">char</span> *read_buf;    <br>                read_buf =(<span class="hljs-type">char</span> *) <span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(<span class="hljs-type">char</span>)* n_write + <span class="hljs-number">1</span>);<br><br>        <span class="hljs-type">int</span> n_read = read(fd,read_buf,n_write);<br><br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;read:%d,context:%s\n&quot;</span>,n_read,read_buf);<br><br><br>        close(fd);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/img/file_build.png" alt="示图"></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>实现linux cp命令</title>
    <link href="/2024/11/19/%E5%AE%9E%E7%8E%B0linux_cp%E5%91%BD%E4%BB%A4/"/>
    <url>/2024/11/19/%E5%AE%9E%E7%8E%B0linux_cp%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<p>实现思路：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs c">./a.out file1 file2<br><br><span class="hljs-number">1.</span> 打开文件<br>open -&gt; file1   O_RDWR<br><br><span class="hljs-number">2.</span> 获取文件长度<br><span class="hljs-type">int</span> size = lseek(fdSrc,<span class="hljs-number">0</span>,SEEK_END);<br><br><br><span class="hljs-number">3.</span> 将文件指针移动到文件头<br>lseek(fdSrc,<span class="hljs-number">0</span>,SEEK_SET);<br><br><span class="hljs-number">4.</span> <span class="hljs-built_in">malloc</span> 申请内存<br>buf = (<span class="hljs-type">char</span> *)<span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(<span class="hljs-type">char</span>)*size + <span class="hljs-number">8</span>);<br><br><span class="hljs-number">5.</span> 读数据<br><span class="hljs-type">int</span> n_read = read(fdSrc,buf,size); <br><br><span class="hljs-number">6.</span> 创建 file2<br><span class="hljs-comment">// 以读写、创建、清空模式打开（若文件不存在则创建，若存在则清空）</span><br><span class="hljs-type">int</span> fdDec = open(argv[<span class="hljs-number">2</span>],O_RDWR|O_CREAT|O_TRUNC,<span class="hljs-number">0600</span>); <br><br><span class="hljs-number">7.</span> 写数据<br><span class="hljs-type">int</span> n_write = write(fdDec,buf,<span class="hljs-built_in">strlen</span>(buf)); <br><br><span class="hljs-number">8.</span> 关闭文件<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span> </span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc,<span class="hljs-type">char</span> **argv)</span> &#123; <br> <span class="hljs-type">char</span> *buf;<br> <span class="hljs-keyword">if</span>(argc != <span class="hljs-number">3</span>)<br> &#123;<br> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;params error\n&quot;</span>);<br> <span class="hljs-built_in">exit</span>(<span class="hljs-number">-1</span>);<br> &#125; <br> <span class="hljs-type">int</span> fdSrc = open(argv[<span class="hljs-number">1</span>], O_RDWR);<br> <span class="hljs-type">int</span> size = lseek(fdSrc,<span class="hljs-number">0</span>,SEEK_END);<br> lseek(fdSrc,<span class="hljs-number">0</span>,SEEK_SET); <br> buf = (<span class="hljs-type">char</span> *)<span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(<span class="hljs-type">char</span>)*size + <span class="hljs-number">8</span>);<br> <span class="hljs-type">int</span> n_read = read(fdSrc,buf,size); <br> <span class="hljs-type">int</span> fdDec = open(argv[<span class="hljs-number">2</span>],O_RDWR|O_CREAT|O_TRUNC,<span class="hljs-number">0600</span>); <br> <span class="hljs-type">int</span> n_write = write(fdDec,buf,<span class="hljs-built_in">strlen</span>(buf)); <br> close(fdSrc);<br> close(fdDec);<br> <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
